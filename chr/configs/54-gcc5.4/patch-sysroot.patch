diff --git a/build/config/sysroot.gni b/build/config/sysroot.gni
index b815d2a..4d99eac 100644
--- a/build/config/sysroot.gni
+++ b/build/config/sysroot.gni
@@ -44,22 +44,35 @@ if (is_linux && target_sysroot_dir != "") {
   } else {
     sysroot = ""
   }
-} else if (is_linux && !is_chromeos && use_sysroot) {
+} else if (is_linux && use_sysroot) {
   # By default build against a sysroot image downloaded from Cloud Storage
   # during gclient runhooks.
-  if (current_cpu == "x64") {
-    sysroot = "//build/linux/debian_wheezy_amd64-sysroot"
-  } else if (current_cpu == "x86") {
-    sysroot = "//build/linux/debian_wheezy_i386-sysroot"
-  } else if (current_cpu == "mipsel") {
-    sysroot = "//build/linux/debian_wheezy_mips-sysroot"
-  } else if (current_cpu == "arm") {
-    sysroot = "//build/linux/debian_wheezy_arm-sysroot"
-  } else if (current_cpu == "arm64") {
-    sysroot = "//build/linux/debian_jessie_arm64-sysroot"
+  if (is_chromeos) {
+    # Regular ChromeOS builds use custom sysroots, but desktop ChromeOS (where
+    # we're building linux desktop binaries but using the ChromeOS UI and
+    # functionality where possible) needs to run on the buliders, which are
+    # running precise.  The precise build has a different set of dependencies
+    # from the wheezy build, so we cannot use the wheezy sysroot.
+    sysroot = "//build/linux/ubuntu_precise_amd64-sysroot"
   } else {
-    # Any other builds don't use a sysroot.
-    sysroot = ""
+    if (current_cpu == "x64") {
+      # sysroot = "//build/linux/debian_wheezy_amd64-sysroot"
+      use_sysroot = false
+      sysroot = ""
+    } else if (current_cpu == "x86") {
+      # sysroot = "//build/linux/debian_wheezy_i386-sysroot"
+      use_sysroot = false
+      sysroot = ""
+    } else if (current_cpu == "mipsel") {
+      sysroot = "//build/linux/debian_wheezy_mips-sysroot"
+    } else if (current_cpu == "arm") {
+      sysroot = "//build/linux/debian_wheezy_arm-sysroot"
+    } else if (current_cpu == "arm64") {
+      sysroot = "//build/linux/debian_jessie_arm64-sysroot"
+    } else {
+      # Any other builds don't use a sysroot.
+      sysroot = ""
+    }
   }
 
   if (sysroot != "") {
@@ -67,7 +80,7 @@ if (is_linux && target_sysroot_dir != "") {
     # gcc 4.9. Clang is able to detect and work with the 4.6 headers while
     # gcc is not. This check can be removed if we ever update to a more modern
     # sysroot.
-    assert(is_clang, "sysroot images require clang (try use_sysroot=false)")
+#    assert(is_clang, "sysroot images require clang (try use_sysroot=false)")
 
     _script_arch = current_cpu
     if (_script_arch == "x86") {